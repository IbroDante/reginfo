services:
  - type: web
    name: jamltd
    env: python
    plan: free
    region: oregon
    buildCommand: |
      pip install -r requirements.txt
      flask db init || true
      flask db migrate || true
      flask db upgrade
    startCommand: gunicorn -k gevent -w 4 app:app
    envVars:
      - key: REDIS_URL
        value: redis://red-d0qs96ripnbc73emomu0:6379
      - key: DATABASE_URL
        value: postgresql://jamltddb_kr5r_user:WzAggUN2Aiq5t4rcuCkU06k3eWJIciFh@dpg-d2chv03uibrs738h84t0-a/jamltddb_kr5r
      - key: POSTGRES_DB
        sync: true
      - key: POSTGRES_USER
        sync: true
      - key: POSTGRES_PASSWORD
        sync: true
      - key: POSTGRES_HOST
        value: postgres
    disk:
      name: jamltd_static
      mountPath: /static/uploads
      sizeGB: 5

  - type: worker          
    name: jamltd-worker  
    env: python
    plan: free
    region: oregon
    buildCommand: pip install -r requirements.txt
    startCommand: python -m celery -A celery_worker.celery worker --concurrency=2 --loglevel=info
    
    envVars:
      - key: REDIS_URL
        value: redis://red-d0qs96ripnbc73emomu0:6379
      - key: DATABASE_URL
        value: postgresql://jamltddb_kr5r_user:WzAggUN2Aiq5t4rcuCkU06k3eWJIciFh@dpg-d2chv03uibrs738h84t0-a/jamltddb_kr5r
      - key: POSTGRES_DB
        sync: true
      - key: POSTGRES_USER
        sync: true
      - key: POSTGRES_PASSWORD
        sync: true
      - key: POSTGRES_HOST
        value: postgres

  - type: pserv
    name: postgres
    plan: free
    env: docker
    autoDeploy: false
    disk:
      name: postgres
      mountPath: /var/lib/postgresql/data
      sizeGB: 10
    envVars:
      - fromGroup: postgres
